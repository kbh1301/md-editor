name: 'publish'

on:
  push:
    branches:
      - release

# This workflow will trigger on each push to the `release` branch to create or update a GitHub release, build your app, and upload the artifacts to the release.

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # for Arm based macs (M1 and above).
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest' # for Intel based macs.
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04' # for Tauri v1 you could replace this with ubuntu-20.04.
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
        # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.
        # You can remove the one that doesn't apply to your app to speed up the workflow a bit.

      - name: install frontend dependencies
        run: npm install

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: 'md-editor v__VERSION__'
          releaseBody: 'https://github.com/kbh1301/md-editor/releases'
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
          includeUpdaterJson: true

      - name: Rename and filter artifacts
        run: |
          mkdir release_assets
          
          # Rename files based on patterns
          if [[ -f *aarch64.dmg ]]; then mv *aarch64.dmg "release_assets/Installer for Mac (Apple Silicon).dmg"; fi
          if [[ -f *x64.dmg ]]; then mv *x64.dmg "release_assets/Installer for Mac (Intel).dmg"; fi
          if [[ -f *en-US.msi ]]; then mv *en-US.msi "release_assets/Installer for Windows.msi"; fi
          if [[ -f *amd64.AppImage ]]; then mv *amd64.AppImage "release_assets/Installer for Linux.AppImage"; fi
          
          # Move updaters without renaming
          mv *aarch64.app.tar.gz* release_assets/
          mv *x64.app.tar.gz* release_assets/
          mv *en-US.msi.zip* release_assets/
          mv *amd64.AppImage.tar.gz* release_assets/

          # Move the latest.json file
          mv latest.json release_assets/

          # Move source code
          mv *.zip release_assets/
          mv *.tar.gz release_assets/

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.tauri-build.outputs.upload_url }}
          asset_path: release_assets/*
          asset_name: ${{ basename(asset_path) }}
          asset_content_type: application/octet-stream